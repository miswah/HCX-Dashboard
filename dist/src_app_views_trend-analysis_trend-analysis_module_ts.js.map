{"version":3,"file":"src_app_views_trend-analysis_trend-analysis_module_ts.js","mappings":"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","sources":["./src/app/views/trend-analysis/trend-analysis.component.ts","./src/app/views/trend-analysis/trend-analysis.component.html","./src/app/views/trend-analysis/trend-analysis.module.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { NbColorHelper, NbDateService, NbThemeService } from \"@nebular/theme\";\n\n@Component({\n  selector: \"ngx-trend-analysis\",\n  templateUrl: \"./trend-analysis.component.html\",\n  styleUrls: [\"./trend-analysis.component.scss\"],\n})\nexport class TrendAnalysisComponent implements OnInit {\n  min: Date;\n  max: Date;\n\n  categories: String[] = [\n    \"All\",\n    \"Pre Auth Request\",\n    \"Pre Auth Response\",\n    \"Enhance Request\",\n    \"Enhance Response\",\n    \"Query Request\",\n    \"Query Response\",\n  ];\n\n  //Trends Graph\n  dataTrends: {};\n  optionsTrends: any;\n  themeSubscriptionTrends: any;\n\n  //Total Claims Graph\n  optionsClaims: any = {};\n  themeSubscriptionClaims: any;\n\n  //Success to error Graph\n  dataS2E: any;\n  optionsS2E: any;\n  themeSubscriptionS2E: any;\n\n  constructor(\n    protected dateService: NbDateService<Date>,\n    private theme: NbThemeService\n  ) {}\n\n  ngOnInit(): void {\n    this.min = this.dateService.addDay(this.dateService.today(), -5);\n    this.max = this.dateService.addDay(this.dateService.today(), 5);\n    this.setTrendsGraph();\n    this.setTotalClaimsGraph();\n    this.setSuccessfulToErrorGraph();\n  }\n\n  setTrendsGraph() {\n    this.themeSubscriptionTrends = this.theme\n      .getJsTheme()\n      .subscribe((config) => {\n        const colors: any = config.variables;\n        const chartjs: any = config.variables.chartjs;\n\n        this.dataTrends = {\n          labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n          datasets: [\n            {\n              label: \"dataset - big points\",\n              data: [\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n              ],\n              borderColor: colors.primary,\n              backgroundColor: colors.primary,\n              fill: false,\n              borderDash: [5, 5],\n              pointRadius: 8,\n              pointHoverRadius: 10,\n            },\n            {\n              label: \"dataset - individual point sizes\",\n              data: [\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n              ],\n              borderColor: colors.dangerLight,\n              backgroundColor: colors.dangerLight,\n              fill: false,\n              borderDash: [5, 5],\n              pointRadius: 8,\n              pointHoverRadius: 10,\n            },\n            {\n              label: \"dataset - large pointHoverRadius\",\n              data: [\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n              ],\n              borderColor: colors.info,\n              backgroundColor: colors.info,\n              fill: false,\n              pointRadius: 8,\n              pointHoverRadius: 10,\n            },\n            {\n              label: \"dataset - large pointHitRadius\",\n              data: [\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n              ],\n              borderColor: colors.success,\n              backgroundColor: colors.success,\n              fill: false,\n              pointRadius: 8,\n              pointHoverRadius: 10,\n            },\n          ],\n        };\n\n        this.optionsTrends = {\n          responsive: true,\n          maintainAspectRatio: false,\n          legend: {\n            position: \"bottom\",\n            labels: {\n              fontColor: chartjs.textColor,\n            },\n          },\n          hover: {\n            mode: \"index\",\n          },\n          scales: {\n            xAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Month\",\n                },\n                gridLines: {\n                  display: true,\n                  color: chartjs.axisLineColor,\n                },\n                ticks: {\n                  fontColor: chartjs.textColor,\n                },\n              },\n            ],\n            yAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Value\",\n                },\n                gridLines: {\n                  display: true,\n                  color: chartjs.axisLineColor,\n                },\n                ticks: {\n                  fontColor: chartjs.textColor,\n                },\n              },\n            ],\n          },\n        };\n      });\n  }\n\n  setTotalClaimsGraph() {\n    this.themeSubscriptionClaims = this.theme\n      .getJsTheme()\n      .subscribe((config) => {\n        const colors: any = config.variables;\n        const echarts: any = config.variables.echarts;\n\n        this.optionsClaims = {\n          backgroundColor: echarts.bg,\n          color: [colors.primaryLight],\n          tooltip: {\n            trigger: \"axis\",\n            axisPointer: {\n              type: \"shadow\",\n            },\n          },\n          grid: {\n            left: \"3%\",\n            right: \"4%\",\n            bottom: \"3%\",\n            containLabel: true,\n          },\n          xAxis: [\n            {\n              type: \"category\",\n              data: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n              axisTick: {\n                alignWithLabel: true,\n              },\n              axisLine: {\n                lineStyle: {\n                  color: echarts.axisLineColor,\n                },\n              },\n              axisLabel: {\n                textStyle: {\n                  color: echarts.textColor,\n                },\n              },\n            },\n          ],\n          yAxis: [\n            {\n              type: \"value\",\n              axisLine: {\n                lineStyle: {\n                  color: echarts.axisLineColor,\n                },\n              },\n              splitLine: {\n                lineStyle: {\n                  color: echarts.splitLineColor,\n                },\n              },\n              axisLabel: {\n                textStyle: {\n                  color: echarts.textColor,\n                },\n              },\n            },\n          ],\n          series: [\n            {\n              name: \"Score\",\n              type: \"bar\",\n              barWidth: \"60%\",\n              data: [10, 52, 200, 334, 390, 330, 220],\n            },\n          ],\n        };\n      });\n  }\n\n  setSuccessfulToErrorGraph() {\n    this.themeSubscriptionS2E = this.theme.getJsTheme().subscribe((config) => {\n      const colors: any = config.variables;\n      const chartjs: any = config.variables.chartjs;\n      console.log(colors);\n      // 00FF00\n      // FF0000\n      this.dataS2E = {\n        labels: [\"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\"],\n        datasets: [\n          {\n            data: [65, 59, 80, 81, 56, 55, 40],\n            label: \"Success\",\n            backgroundColor: NbColorHelper.hexToRgbA(\"#00FF00\", 0.8),\n          },\n          {\n            data: [28, 48, 40, 19, 86, 27, 90],\n            label: \"Error\",\n            backgroundColor: NbColorHelper.hexToRgbA(\"#FF0000\", 0.8),\n          },\n        ],\n      };\n\n      this.optionsS2E = {\n        maintainAspectRatio: false,\n        responsive: true,\n        legend: {\n          labels: {\n            fontColor: chartjs.textColor,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                display: false,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: {\n                display: true,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n        },\n      };\n    });\n  }\n\n  private random() {\n    return Math.round(Math.random() * 100);\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscriptionTrends.unsubscribe();\n    this.themeSubscriptionClaims.unsubscribe();\n    this.themeSubscriptionS2E.unsubscribe();\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-8\">\n      <nb-card>\n        <nb-card-body>\n          <div class=\"row mb-3\">\n            <div class=\"col-md-6 text-center\">\n              <nb-select selected=\"All\" style=\"min-width: 50%\">\n                <nb-option *ngFor=\"let item of categories\" [value]=\"item\">{{\n                  item\n                }}</nb-option>\n              </nb-select>\n            </div>\n            <div class=\"col-md-6 text-center\">\n              <input\n                style=\"min-width: 50%\"\n                nbInput\n                placeholder=\"Range Picker\"\n                [nbDatepicker]=\"rangepicker\"\n              />\n              <nb-rangepicker\n                #rangepicker\n                [min]=\"min\"\n                [max]=\"max\"\n              ></nb-rangepicker>\n            </div>\n          </div>\n\n          <chart\n            style=\"min-height: 400px\"\n            type=\"line\"\n            [data]=\"dataTrends\"\n            [options]=\"optionsTrends\"\n          ></chart>\n        </nb-card-body>\n      </nb-card>\n    </div>\n\n    <div class=\"col-4\">\n      <nb-card>\n        <nb-card-body>\n          <p class=\"header-p\">\n            Total Number of Claims Between <b>03-05-2022 and 06-05-2022</b> For\n            type <b>All</b> is <b>200</b>\n          </p>\n\n          <div echarts [options]=\"optionsClaims\" class=\"echart\"></div>\n        </nb-card-body>\n      </nb-card>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-7\">\n      <nb-card>\n        <nb-card-header>Claim Flow by Hospital</nb-card-header>\n        <nb-card-body>\n          <chart\n            style=\"min-height: 300px\"\n            type=\"line\"\n            [data]=\"dataTrends\"\n            [options]=\"optionsTrends\"\n          ></chart>\n        </nb-card-body>\n      </nb-card>\n    </div>\n    <div class=\"col-5\">\n      <nb-card>\n        <nb-card-header>Successful to Error Claims</nb-card-header>\n        <nb-card-body>\n          <chart\n            style=\"min-height: 300px\"\n            type=\"bar\"\n            [data]=\"dataS2E\"\n            [options]=\"optionsS2E\"\n          ></chart>\n        </nb-card-body>\n      </nb-card>\n    </div>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { TrendAnalysisComponent } from \"./trend-analysis.component\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport {\n  NbCardModule,\n  NbDatepickerModule,\n  NbInputModule,\n  NbSelectModule,\n} from \"@nebular/theme\";\nimport { NgxChartsModule } from \"@swimlane/ngx-charts\";\nimport { NgxEchartsModule } from \"ngx-echarts\";\nimport { ChartModule } from \"angular2-chartjs\";\n\n//Routes\nconst routes: Routes = [\n  { path: \"\", component: TrendAnalysisComponent },\n  { path: \"**\", redirectTo: \"\", pathMatch: \"full\" },\n];\n@NgModule({\n  declarations: [TrendAnalysisComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    NbCardModule,\n    NbSelectModule,\n    NbDatepickerModule,\n    ChartModule,\n    NbInputModule,\n    NgxEchartsModule,\n  ],\n})\nexport class TrendAnalysisModule {}\n"],"names":[],"sourceRoot":"webpack:///"}