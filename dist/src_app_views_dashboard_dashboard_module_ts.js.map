{"version":3,"file":"src_app_views_dashboard_dashboard_module_ts.js","mappings":"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","sources":["./src/app/views/dashboard/dashboard.component.ts","./src/app/views/dashboard/dashboard.component.html","./src/app/views/dashboard/dashboard.module.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { NbThemeService, NbColorHelper } from \"@nebular/theme\";\nimport { LayoutService } from \"../../@core/utils\";\n\n\n@Component({\n  selector: \"ngx-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.scss\"],\n})\nexport class DashboardComponent implements OnInit {\n  data: any;\n  options: any;\n  themeSubscription: any;\n  chartData: number[];\n\n  //Providers Graphs\n  multi = [\n    {\n      name: \"Germany\",\n      series: [\n        {\n          name: \"17\",\n          value: 20,\n        },\n        {\n          name: \"18\",\n          value: 25,\n        },\n        {\n          name: \"19\",\n          value: 30,\n        },\n        {\n          name: \"20\",\n          value: 20,\n        },\n        {\n          name: \"21\",\n          value: 25,\n        },\n        {\n          name: \"22\",\n          value: 40,\n        },\n        {\n          name: \"23\",\n          value: 10,\n        },\n      ],\n    },\n  ];\n  showLegend = false;\n  showXAxis = true;\n  showYAxis = true;\n  showXAxisLabel = true;\n  xAxisLabel = \"Days\";\n  showYAxisLabel = true;\n  yAxisLabel = \"Number of Providers\";\n  colorScheme: any;\n\n  //Trends Graph\n  dataTrends: {};\n  optionsTrends: any;\n  themeSubscriptionTrends: any;\n\n  constructor(\n    private theme: NbThemeService,\n    private layoutService: LayoutService\n  ) {}\n\n  ngOnInit(): void {\n    this.setUpLineMap();\n    this.setUpProvidersGraph();\n    this.setTrendsGraph();\n  }\n\n  setUpProvidersGraph() {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config) => {\n      const colors: any = config.variables;\n      this.colorScheme = {\n        domain: [\n          colors.primaryLight,\n          colors.infoLight,\n          colors.successLight,\n          colors.warningLight,\n          colors.dangerLight,\n        ],\n      };\n    });\n  }\n\n  setUpLineMap() {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config) => {\n      const colors: any = config.variables;\n      const chartjs: any = config.variables.chartjs;\n\n      this.data = {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n        ],\n        datasets: [\n          {\n            data: [65, 59, 80, 81, 56, 55, 40],\n            label: \"Series A\",\n            backgroundColor: NbColorHelper.hexToRgbA(colors.primary, 0.3),\n            borderColor: colors.primary,\n          },\n        ],\n      };\n\n      this.options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                display: true,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: {\n                display: true,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n        },\n        legend: {\n          labels: {\n            fontColor: chartjs.textColor,\n          },\n        },\n      };\n    });\n  }\n\n  setTrendsGraph() {\n    this.themeSubscriptionTrends = this.theme\n      .getJsTheme()\n      .subscribe((config) => {\n        const colors: any = config.variables;\n        const chartjs: any = config.variables.chartjs;\n\n        this.dataTrends = {\n          labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n          datasets: [\n            {\n              label: \"dataset - big points\",\n              data: [\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n              ],\n              borderColor: colors.primary,\n              backgroundColor: colors.primary,\n              fill: false,\n              borderDash: [5, 5],\n              pointRadius: 8,\n              pointHoverRadius: 10,\n            },\n            {\n              label: \"dataset - individual point sizes\",\n              data: [\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n              ],\n              borderColor: colors.dangerLight,\n              backgroundColor: colors.dangerLight,\n              fill: false,\n              borderDash: [5, 5],\n              pointRadius: 8,\n              pointHoverRadius: 10,\n            },\n            {\n              label: \"dataset - large pointHoverRadius\",\n              data: [\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n              ],\n              borderColor: colors.info,\n              backgroundColor: colors.info,\n              fill: false,\n              pointRadius: 8,\n              pointHoverRadius: 10,\n            },\n            {\n              label: \"dataset - large pointHitRadius\",\n              data: [\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n                this.random(),\n              ],\n              borderColor: colors.success,\n              backgroundColor: colors.success,\n              fill: false,\n              pointRadius: 8,\n              pointHoverRadius: 10,\n            },\n          ],\n        };\n\n        this.optionsTrends = {\n          responsive: true,\n          maintainAspectRatio: false,\n          legend: {\n            position: \"bottom\",\n            labels: {\n              fontColor: chartjs.textColor,\n            },\n          },\n          hover: {\n            mode: \"index\",\n          },\n          scales: {\n            xAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Month\",\n                },\n                gridLines: {\n                  display: true,\n                  color: chartjs.axisLineColor,\n                },\n                ticks: {\n                  fontColor: chartjs.textColor,\n                },\n              },\n            ],\n            yAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Value\",\n                },\n                gridLines: {\n                  display: true,\n                  color: chartjs.axisLineColor,\n                },\n                ticks: {\n                  fontColor: chartjs.textColor,\n                },\n              },\n            ],\n          },\n        };\n      });\n  }\n\n  private random() {\n    return Math.round(Math.random() * 100);\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n    this.themeSubscriptionTrends.unsubscribe();\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-7\">\n      <nb-card>\n        <nb-card-header>Claims</nb-card-header>\n        <nb-card-body>\n          <chart\n            style=\"min-height: 400px\"\n            type=\"line\"\n            [data]=\"data\"\n            [options]=\"options\"\n          ></chart>\n        </nb-card-body>\n      </nb-card>\n    </div>\n    <div class=\"col-5\">\n      <div>\n        <nb-card>\n          <nb-card-header>Total number of Providers : <b>20</b></nb-card-header>\n          <nb-card-body style=\"min-height: 320px\">\n            <ngx-charts-line-chart\n              [scheme]=\"colorScheme\"\n              [results]=\"multi\"\n              [xAxis]=\"showXAxis\"\n              [yAxis]=\"showYAxis\"\n              [legend]=\"showLegend\"\n              [showXAxisLabel]=\"showXAxisLabel\"\n              [showYAxisLabel]=\"showYAxisLabel\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n            >\n            </ngx-charts-line-chart>\n          </nb-card-body>\n        </nb-card>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <nb-card>\n        <nb-card-header>Trends</nb-card-header>\n        <nb-card-body>\n          <chart\n            style=\"min-height: 400px\"\n            type=\"line\"\n            [data]=\"dataTrends\"\n            [options]=\"optionsTrends\"\n          ></chart>\n        </nb-card-body>\n      </nb-card>\n    </div>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { DashboardComponent } from \"./dashboard.component\";\nimport { ChartModule } from \"angular2-chartjs\";\nimport { NbCardModule } from \"@nebular/theme\";\nimport { NgxEchartsModule } from \"ngx-echarts\";\nimport { NgxChartsModule } from \"@swimlane/ngx-charts\";\n\n//Routes\nconst routes: Routes = [\n  { path: \"\", component: DashboardComponent },\n  { path: \"**\", redirectTo: \"\" },\n];\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ChartModule,\n    NbCardModule,\n    NgxEchartsModule,\n    NgxChartsModule,\n  ],\n})\nexport class DashboardModule {}\n"],"names":[],"sourceRoot":"webpack:///"}